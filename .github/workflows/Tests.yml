###############################################################
# Copyright 2022 Mabrains
###############################################################

name: Build Docker Images

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ github.token }}
  DOCKER_BUILDKIT: 1
  IMAGE: ghcr.io/mabrains/pdk_regression_v0.0.1
  KLAYOUT_VERSION: v0.27.12

jobs:
  BuildContainerImage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build container image
        run: |
          docker build -t "$IMAGE" - <<EOF
          FROM ubuntu:22.04

          RUN apt-get update -qq \
           && DEBIAN_FRONTEND=noninteractive apt-get -y  install \
              build-essential gcc g++ make qtbase5-dev qttools5-dev \
              libqt5xmlpatterns5-dev qtmultimedia5-dev libqt5multimediawidgets5\
              libqt5svg5-dev ruby ruby-dev python3 python3-dev libz-dev python3-pip git\
           && apt-get autoclean && apt-get clean && apt-get -y autoremove \
           && rm -rf /var/lib/apt/lists/*

          RUN git clone https://github.com/KLayout/klayout.git
          RUN cd klayout && git checkout $KLAYOUT_VERSION && ./build.sh -j$(nproc) && mkdir -p /tools/klayout-$KLAYOUT_VERSION && cp -rf bin-release/* /tools/klayout-$KLAYOUT_VERSION
          RUN wget https://repo.anaconda.com/archive/Anaconda3-2022.10-Linux-x86_64.sh && chmod +x https://repo.anaconda.com/archive/Anaconda3-2022.10-Linux-x86_64.sh && ./Anaconda3-2022.10-Linux-x86_64.sh -b && $HOME/anaconda3/bin/conda init
          RUN echo 'export PATH=/tools/klayout-$KLAYOUT_VERSION:$PATH\nexport LD_LIBRARY_PATH=/tools/klayout-$KLAYOUT_VERSION:$LD_LIBRARY_PATH' > setup_tools.sh
          EOF

      - name: Push container image to registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: pyTooling/Actions/with-post-step@r0
        with:
          main: |
            echo '${{ github.token }}' | docker login ghcr.io -u gha --password-stdin
            docker push "$IMAGE"
          post: docker logout ghcr.io

